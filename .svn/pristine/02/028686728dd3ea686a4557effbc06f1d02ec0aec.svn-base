package com.payegis.tools.db;

import com.mongodb.*;
import com.mongodb.client.MongoDatabase;
import com.payegis.tools.util.ExternalPropertyUtils;

import java.util.ArrayList;
import java.util.List;

/**
 * Description: MongoDB操作工具类
 * Author: chenzuoli
 * Date: 2018/3/13
 * Time: 9:36
 */
public class MongoDBReplsetUtils {
    private static MongoDBReplsetUtils mongoDBReplsetUtils = null;
    public MongoDatabase mongoDatabase;
    private ServerAddress seed1;
    private ServerAddress seed2;
    private String username;
    private String password;
    private String replSetName;
    private String default_db;

    private MongoDBReplsetUtils(String profilePath) {
        ExternalPropertyUtils propertyUtil = ExternalPropertyUtils.getInstance(profilePath);
        String mongodbport1 = propertyUtil.props.getProperty("mongodbport1");
        int port1 = mongodbport1.matches("\\d+") ? Integer.parseInt(mongodbport1) : 27017;
        String mongodbport2 = propertyUtil.props.getProperty("mongodbport2");
        int port2 = mongodbport1.matches("\\d+") ? Integer.parseInt(mongodbport2) : 27017;
        seed1 = new ServerAddress(propertyUtil.props.getProperty("mongodbhost1"), port1);
        seed2 = new ServerAddress(propertyUtil.props.getProperty("mongodbhost2"), port2);
        username = propertyUtil.props.getProperty("username");
        password = propertyUtil.props.getProperty("password");
        replSetName = propertyUtil.props.getProperty("replsetname");
        default_db = propertyUtil.props.getProperty("certificatedb");
        mongoDatabase = createMongoDBClient().getDatabase(propertyUtil.props.getProperty("datadb"));
    }

    public static synchronized MongoDBReplsetUtils getInstance(String profilePath) {
        if (mongoDBReplsetUtils == null) {
            mongoDBReplsetUtils = new MongoDBReplsetUtils(profilePath);
        }
        return mongoDBReplsetUtils;
    }

    private MongoClient createMongoDBClient() {
        // 构建Seed列表
        List<ServerAddress> seedList = new ArrayList<>();
        seedList.add(seed1);
        seedList.add(seed2);
        // 构建鉴权信息
        List<MongoCredential> credentials = new ArrayList<>();
        credentials.add(MongoCredential.createScramSha1Credential(username,
                default_db, password.toCharArray()));

        // 构建操作选项，requiredReplicaSetName属性外的选项根据自己的实际需求配置，默认参数满足大多数场景
        MongoClientOptions options = MongoClientOptions.builder()
                .requiredReplicaSetName(replSetName).socketTimeout(2000)
                .connectionsPerHost(1).build();
        return new MongoClient(seedList, credentials, options);
    }

    private MongoClient createMongoDBClientWithURI() {
        //另一种通过URI初始化
        //mongodb://[username:password@]host1[:port1][,host2[:port2],...[,hostN[:portN]]][/[database][?options]]
        MongoClientURI connectionString = new MongoClientURI("mongodb://" + username + ":" + password + "@" +
                seed1 + "," + seed2 + "/" +
                default_db +
                "?replicaSet=" + replSetName);
        return new MongoClient(connectionString);
    }

}
